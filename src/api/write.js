import { useMutation, useQueryClient } from "react-query";

import { emitCustomEvent } from "../events";
import { writeItems } from "./utils";

/** Import items generated by the Wikipedia Citoid API to Zotero
 * @fires zotero-roam:write
 * @returns 
 */
const useImportCitoids = () => {
	let client = useQueryClient();

	return useMutation((variables) => {
		const { collections = [], items, library, tags = [] } = variables;
		return writeItems(items, { library, collections, tags});
	}, {
		onSettled: (data, error, variables, _context) => {
			const { collections, items, library: { path }, tags } = variables;

			if(!error){
				// Invalidate item queries related to the library used
				// Data can't be updated through cache modification because of the library version
				client.invalidateQueries(["items", { library: path }], {
					refetchInactive: true
				});	
			}

			emitCustomEvent("write", {
				collections,
				data: data.data,
				error,
				items,
				library: path,
				tags
			});
		}
	});
};

export {
	useImportCitoids
};